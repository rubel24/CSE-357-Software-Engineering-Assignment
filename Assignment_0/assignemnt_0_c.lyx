#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard

\series bold
\size larger
Assignment 0 (c) :
\end_layout

\begin_layout Standard
Using RMI for connecting two java program that will give the sum of n natural
 numbers .
\end_layout

\begin_layout Standard
Givving An input number in one program and another will give the summation
 .
\end_layout

\begin_layout Standard

\series bold
Creating a Simple RMI application involves following steps 
\end_layout

\begin_layout Enumerate
Define a remote interface.
 
\end_layout

\begin_layout Enumerate
Implementing remote interface.
 
\end_layout

\begin_layout Enumerate
create and start remote application 
\end_layout

\begin_layout Enumerate
create and start client application 
\end_layout

\begin_layout Standard

\series bold
Define a remote interface :
\end_layout

\begin_layout Standard
A remote interface specifies the methods that can be invoked remotely by
 a client.
 Clients program communicate to remote interfaces, not to classes implementing
 it.
 To be a remote interface, a interface must extend the Remote interface
 of java.rmi package.
\end_layout

\begin_layout Standard
import java.rmi.*;
\end_layout

\begin_layout Standard
public interface AddServerInterface extends Remote
\end_layout

\begin_layout Standard
{ 
\end_layout

\begin_layout Standard
public int sum(int a,int b); 
\end_layout

\begin_layout Standard
} 
\end_layout

\begin_layout Standard

\series bold
Implementation of remote interface :
\end_layout

\begin_layout Standard
import java.rmi.*;
\end_layout

\begin_layout Standard
import java.rmi.registry.*;
\end_layout

\begin_layout Standard
public class AddServer
\end_layout

\begin_layout Standard
{ 
\end_layout

\begin_layout Standard
public static void main(String args[]){
\end_layout

\begin_layout Standard
try
\end_layout

\begin_layout Standard
{ 
\end_layout

\begin_layout Standard
AddServerInterface addService=new Adder();
\end_layout

\begin_layout Standard
Naming.rebind("AddService",addService); //addService object is hosted with
 name AddService.
\end_layout

\begin_layout Standard
}
\end_layout

\begin_layout Standard
catch(Exception e)
\end_layout

\begin_layout Standard
{
\end_layout

\begin_layout Standard
System.out.println(e);
\end_layout

\begin_layout Standard
} 
\end_layout

\begin_layout Standard
} 
\end_layout

\begin_layout Standard
} 
\end_layout

\begin_layout Standard

\series bold
Create client application :
\end_layout

\begin_layout Standard
import java.rmi.*; 
\end_layout

\begin_layout Standard
public class Client
\end_layout

\begin_layout Standard
{ 
\end_layout

\begin_layout Standard
public static void main(String args[]){
\end_layout

\begin_layout Standard
try
\end_layout

\begin_layout Standard
{
\end_layout

\begin_layout Standard
AddServerInterface st=(AddServerInterface)Naming.lookup("rmi://"+args[0]+"/AddSer
vice");
\end_layout

\begin_layout Standard
System.out.println(st.sum(25,8));
\end_layout

\begin_layout Standard
}
\end_layout

\begin_layout Standard
catch(Exception e)
\end_layout

\begin_layout Standard
{
\end_layout

\begin_layout Standard
System.out.println(e);
\end_layout

\begin_layout Standard
} 
\end_layout

\begin_layout Standard
} 
\end_layout

\begin_layout Standard
}
\end_layout

\begin_layout Standard

\series bold
Steps to run this RMI:
\end_layout

\begin_layout Standard
application Save all the above java file into a directory and name it as
 "rmi"
\end_layout

\begin_layout Standard
compile all the java files javac *.java run rmi application
\end_layout

\begin_layout Standard
Start RMI registry start rmiregistry run rmi application
\end_layout

\begin_layout Standard
Run Server file java AddServer run rmi application
\end_layout

\begin_layout Standard
Run Client file in another command prompt abd pass local host port number
 at run time java Client 127.0.0.1 run rmi application
\end_layout

\end_body
\end_document
